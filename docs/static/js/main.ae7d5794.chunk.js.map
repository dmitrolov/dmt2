{"version":3,"sources":["app/components/SideMenu/SideMenu.tsx","app/constants/routes.ts","app/api/firebase/firebase.ts","app/pages/adventureCreate/AdventureCreate.tsx","app/pages/adventureList/AdventureList.tsx","app/pages/adventureView/AdventureView.tsx","app/pages/characterCreate/CharacterCreate.tsx","app/pages/characterView/CharacterView.tsx","app/redux/constants.ts","app/redux/actions/index.ts","app/redux/actions/userActions.ts","app/pages/home/Home.tsx","app/pages/signIn/SignIn.tsx","app/pages/signUp/SignUp.tsx","app/components/GameMenu/GameMenu.tsx","app/App.tsx","app/redux/reducers/userDataReducer.ts","app/redux/reducers/index.ts","store.ts","index.tsx"],"names":["SideMenu","props","useState","isMenuCollapsed","state","setState","renderMenuItem","route","staticItem","text","className","to","renderMenuList","isMobileMenuView","Switch","checked","onChange","Drawer","open","isMenuOpened","onClose","onClick","onKeyDown","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","newAdventure","name","description","image","playersList","dungeonMaster","charactersList","notes","connect","playerEmail","setPlayerEmail","errorsList","setErrorsList","history","useHistory","currentErrors","event","target","value","placeholder","e","push","map","email","length","console","log","firestore","collection","doc","set","then","response","error","adventuresList","setAdventuresList","get","adventures","docs","data","useEffect","adventure","id","match","params","character","undefined","docName","a","async","getCharacter","style","width","src","about","imageUrl","alt","key","info","playerName","characterName","race","subRace","sex","age","total","height","weight","background","actions","SET_USER","userActionTypes","setUserActionConverter","user","type","payload","createAction","setUserAction","dispatch","userData","setUser","userEmail","setUserEmail","bodyWidth","document","getElementsByTagName","clientWidth","bodyHeight","clientHeight","auth","onAuthStateChanged","currentUser","alert","signOut","setEmail","password","setPassword","statusList","setStatus","pass","signInWithEmailAndPassword","catch","SignInEmail","firebaseResponse","message","validationErrors","test","String","toLowerCase","validation","createUserWithEmailAndPassword","SignUpEmail","onMenuButtonClick","App","menu","isMobileMenu","clientWindowResolution","onWindowResize","body","window","onresize","exact","path","component","Home","SignIn","SignUp","AdventureCreate","AdventureList","AdventureView","CharacterCreate","CharacterView","initialState","rootReducer","combineReducers","action","middleware","thunk","env","REACT_APP_NODE_ENV","logger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.ae7d5794.chunk.js","sourcesContent":["import { Drawer } from '@material-ui/core';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport './SideMenu.sass';\r\n\r\ninterface SideMenuProps {\r\n  isMobileMenuView: boolean;\r\n  isMenuCollapsed: boolean;\r\n  isMenuOpened: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface SideMenuState {\r\n  isMenuCollapsed: boolean;\r\n}\r\n\r\nexport const SideMenu = (props: SideMenuProps) => {\r\n  const [state, setState] = useState<SideMenuState>({\r\n    isMenuCollapsed: props.isMenuCollapsed\r\n  });\r\n\r\n  const renderMenuItem = (route: string, staticItem: JSX.Element, text: string) => {\r\n    return <div className='menu-list__item'>\r\n      <Link to={ route } className='menu-list__link'>\r\n        <div className='menu-list__static-item'>{ staticItem }</div>\r\n        <div className={ !state.isMenuCollapsed ? 'menu-list__text' : 'menu-list__text collapsed' }>\r\n          <span>{ text }</span>\r\n        </div>\r\n      </Link>\r\n    </div>;\r\n  };\r\n\r\n  const renderMenuList = () => {\r\n    return <div className='menu-list'>\r\n      <div>\r\n        { renderMenuItem(ROUTES.HOME, <HomeIcon />, 'Главная') }\r\n        { renderMenuItem(ROUTES.ADVENTURE_CREATE, <AddIcon />, 'Создать приключение') }\r\n        { renderMenuItem(ROUTES.ADVENTURE_LIST, <ListIcon />, 'Мои приключения') }\r\n        { renderMenuItem('/adventure/view/Djadame/character/create', <PersonAddIcon />, 'Создать персонажа') }\r\n        { renderMenuItem('/adventure/view/Djadame/character/view/a_a', <FaceIcon />, 'a_a char') }\r\n      </div>\r\n      <div>\r\n        { renderMenuItem(ROUTES.SIGN_IN, <AccountCircleIcon />, 'Вход') }\r\n        { renderMenuItem(ROUTES.SIGN_UP, <AccountCircleIcon />, 'Регистрация') }\r\n        {\r\n          !props.isMobileMenuView &&\r\n          <div className='menu-list__item switch'>\r\n            <Switch\r\n              checked={ !state.isMenuCollapsed }\r\n              onChange={ () => setState({ ...state, isMenuCollapsed: !state.isMenuCollapsed }) } />\r\n            <span\r\n              className={ !state.isMenuCollapsed ? 'menu-list__text' : 'menu-list__text collapsed' }>COLLAPSE MENU\r\n          </span>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>;\r\n  };\r\n\r\n  return props.isMobileMenuView\r\n    ? <Drawer\r\n      open={ props.isMenuOpened }\r\n      onClose={ props.onClose }>\r\n      <div\r\n        className='side-menu side-menu--mobile'\r\n        onClick={ props.onClose }\r\n        onKeyDown={ props.onClose }>\r\n        { renderMenuList() }\r\n      </div>\r\n    </Drawer>\r\n    : <div\r\n      className={ `side-menu side-menu--desktop ${ state.isMenuCollapsed ? 'collapsed' : '' } ${ !props.isMenuOpened ? 'closed' : '' }` }>\r\n      { renderMenuList() }\r\n    </div>;\r\n};\r\n","export const HOME = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const ADVENTURE_CREATE = '/adventure/create';\r\nexport const ADVENTURE_LIST = '/adventure/list';\r\nexport const ADVENTURE_VIEW = '/adventure/view/:id';\r\nexport const CHARACTER_CREATE = '/adventure/view/:id/character/create';\r\nexport const CHARACTER_VIEW = '/adventure/view/:id/character/view/:id';\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { Adventure } from '../../types/adventure/Adventure';\r\nimport { Character } from '../../types/character/Character';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const SignUpEmail = (email: string, password: string) => {\r\n  return firebase.auth()\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .catch((e: any) => {\r\n      return e;\r\n    });\r\n};\r\n\r\nexport const SignInEmail = (email: string, password: string) => {\r\n  return firebase.auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .catch((e: any) => {\r\n      return e;\r\n    });\r\n};\r\n\r\nexport const CreateAdventure = (newAdventure: Adventure) => {\r\n  return firebase.firestore()\r\n    .collection('adventures')\r\n    .doc(newAdventure.name)\r\n    .set({ ...newAdventure })\r\n};\r\n\r\nexport const GetAllUserAdventures: () => Promise<Adventure[]> = () => {\r\n  return firebase.firestore()\r\n    .collection('adventures')\r\n    .get()\r\n    .then(adventures => {\r\n      return adventures.docs.map(doc => {\r\n        return doc.data() as Adventure;\r\n      })\r\n    })\r\n};\r\n\r\nexport const getCharacter: (docName: string) => Promise<Character | undefined> = async (docName) => {\r\n  const character = await firebase.firestore()\r\n    .collection('playerCharacters')\r\n    .doc(docName)\r\n    .get();\r\n  return character.data() as Character;\r\n}\r\n\r\nexport const setCharacter = (docName: string, data: Character) => {\r\n  firebase.firestore()\r\n    .collection('playerCharacters')\r\n    .doc(docName)\r\n    .set(data)\r\n}\r\n\r\nexport const getAllChars = () => {\r\n  return firebase.firestore()\r\n    .collection('playerCharacters')\r\n    .get()\r\n    .then((characters) => {\r\n      return characters.docs.map((doc) => {\r\n        return { id: doc.id, ...doc.data() };\r\n      });\r\n    });\r\n};\r\n\r\nexport default firebase;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CreateAdventure } from '../../api/firebase/firebase';\r\nimport { Adventure } from '../../types/adventure/Adventure';\r\nimport * as ROUTES from './../../constants/routes';\r\nimport './AdventureCreate.sass';\r\n\r\nconst newAdventure: Adventure = {\r\n  name: '',\r\n  description: '',\r\n  image: '',\r\n  playersList: [],\r\n  dungeonMaster: '',\r\n  charactersList: [],\r\n  notes: []\r\n};\r\n\r\nconst AdventureCreate = () => {\r\n  const [playerEmail, setPlayerEmail] = useState('');\r\n  const [errorsList, setErrorsList] = useState(['']);\r\n  const history = useHistory();\r\n  const currentErrors: string[] = [];\r\n\r\n  const validation = () => {\r\n    if (newAdventure.name.length === 0) currentErrors.push('Adventure name should not be empty');\r\n    if (newAdventure.playersList.length === 0) currentErrors.push('Players list should not be empty');\r\n    setErrorsList(currentErrors);\r\n    console.log('[currentErrors]:', currentErrors);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    validation();\r\n    if (currentErrors.length === 0) {\r\n      newAdventure.dungeonMaster = newAdventure.playersList[0];\r\n      CreateAdventure(newAdventure).then(response => console.log('[AdventureCreate response]:', response));\r\n      history.push(ROUTES.ADVENTURE_LIST);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='adventure-create'>\r\n      <span>Название приключения*</span>\r\n      <input onChange={ (event => newAdventure.name = event.target.value) } />\r\n      <span>Описание приключения</span>\r\n      <textarea onChange={ (event => newAdventure.description = event.target.value) } />\r\n      <span>Картинка приключения</span>\r\n      <input placeholder='url' onChange={ (event => newAdventure.image = event.target.value) } />\r\n      <span>Добавить игрока</span>\r\n      <div>\r\n        <input placeholder='email' value={ playerEmail } onChange={ (e) => {setPlayerEmail(e.target.value);} } />\r\n        <button onClick={ () => {\r\n          newAdventure.playersList.push(playerEmail);\r\n          setPlayerEmail('');\r\n        } }>Добавить\r\n        </button>\r\n      </div>\r\n      <h4>Игроки*:</h4>\r\n      { newAdventure.playersList.map(email => <span>{ email }</span>) }\r\n      <h4>Dungeon Master*:</h4>\r\n      { newAdventure.playersList[0] }\r\n      <button onClick={ onSubmit }>Создать приключение</button>\r\n      <span>Errors:</span>\r\n      { errorsList.map(error => <span>{ error }</span>) }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(AdventureCreate);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetAllUserAdventures } from '../../api/firebase/firebase';\r\nimport { Adventure } from '../../types/adventure/Adventure';\r\nimport './AdventureList.sass';\r\n\r\nexport const AdventureList = () => {\r\n  const [adventuresList, setAdventuresList] = useState<Adventure[]>([]);\r\n\r\n  GetAllUserAdventures().then((adventures: Adventure[]) => {\r\n    setAdventuresList(adventures);\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n  });\r\n\r\n  return (\r\n    <div className='adventure-list'>\r\n      Advenure List here\r\n      { adventuresList.map(adventure => <Link to={`view/${adventure.name}`}>{ adventure.name }</Link>) }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(AdventureList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './AdventureView.sass';\r\n\r\nconst AdventureView = (props: any) => {\r\n  const { match } = props;\r\n  const { id } = match.params;\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div className='adventure-view'>\r\n      <span>Adventure id { id }</span>\r\n      <Link to={ `${ id }/character/view/a_a` }>a_a</Link>\r\n\r\n      <button onClick={ () => history.push(`/adventure/view/${id}/character/create`) }>Create character</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(AdventureView);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './CharacterCreate.sass';\r\n\r\ninterface CharacterCreateProps {\r\n\r\n}\r\n\r\nconst CharacterCreate = (props: CharacterCreateProps) => {\r\n  const [state, setState] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('[CharacterCreate WORKS!!!]', null);\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className='character-create'>\r\n      <button onClick={ () => setState(!state) }>CharacterCreate WORKS!!!</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, null)(CharacterCreate);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './CharacterView.sass';\r\nimport { getCharacter } from '../../api/firebase/firebase';\r\nimport { Character } from '../../types/character/Character';\r\n\r\ninterface CharacterViewProps {\r\n    match: any\r\n}\r\n\r\ninterface CharacterViewState {\r\n    character: Character | undefined\r\n}\r\n\r\nconst CharacterView = (props: CharacterViewProps) => {\r\n    const [state, setState] = useState<CharacterViewState>({\r\n        character: undefined\r\n    });\r\n\r\n    useEffect(() => {\r\n        getCharacter(props.match.params.id)\r\n            .then((data) => {\r\n                if (data) {\r\n                    setState((state) => ({ ...state, character: data }))\r\n                    console.log('[characterData]', data);\r\n                }\r\n            })\r\n    }, [props.match.params.id]);\r\n\r\n    console.log('[state.character]', state.character);\r\n    return (\r\n        <div className='character-view'>\r\n            {state.character ? <div>\r\n                <img style={{ width: 100 }} src={state.character.about.description.imageUrl} alt=\"\" />\r\n                <table>\r\n                    <tbody>\r\n                        <tr key={1}>\r\n                            <td>playerName</td>\r\n                            <td>{state.character.about.info.playerName}</td>\r\n                        </tr>\r\n                        <tr key={2}>\r\n                            <td>characterName</td>\r\n                            <td>{state.character.about.info.characterName}</td>\r\n                        </tr>\r\n                        <tr key={3}>\r\n                            <td>race</td>\r\n                            <td>{state.character.about.info.race}</td>\r\n                        </tr>\r\n                        <tr key={4}>\r\n                            <td>subRace</td>\r\n                            <td>{state.character.about.info.subRace}</td>\r\n                        </tr>\r\n                        <tr key={5}>\r\n                            <td>sex</td>\r\n                            <td>{state.character.about.description.sex}</td>\r\n                        </tr>\r\n                        <tr key={6}>\r\n                            <td>age</td>\r\n                            <td>{state.character.about.description.age.total}</td>\r\n                        </tr>\r\n                        <tr key={7}>\r\n                            <td>height</td>\r\n                            <td>{state.character.about.description.height}</td>\r\n                        </tr>\r\n                        <tr key={8}>\r\n                            <td>weight</td>\r\n                            <td>{state.character.about.description.weight}</td>\r\n                        </tr>\r\n                        <tr key={9}>\r\n                            <td>background</td>\r\n                            <td>{state.character.about.info.background}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div> : <div>Loading . . .</div>}\r\n            {/* <button onClick={\r\n                () => setCharacter(props.match.params.id, state.character as Character)\r\n            }>set</button> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, null)(CharacterView);\r\n","export const actions = {\r\n  userActionTypes: {\r\n    SET_USER: 'SET_USER'\r\n  },\r\n\r\n\r\n\r\n\r\n  // samples\r\n  basic: {\r\n    ADD_QUESTION: 'ADD_QUESTION',\r\n    DELETE_QUESTION: 'DELETE_QUESTION',\r\n    DELETE_SKILL: 'DELETE_SKILL',\r\n    ADD_SKILL: 'ADD_SKILL',\r\n    REORDER_SKILLS: 'REORDER_SKILLS',\r\n    REORDER_QUESTIONS: 'REORDER_QUESTIONS',\r\n    ADD_COMMENT: 'ADD_COMMENT',\r\n    DELETE_COMMENT: 'DELETE_COMMENT',\r\n    UPDATE_COMMENT: 'UPDATE_COMMENT',\r\n    UPDATE_RATING: 'UPDATE_RATING',\r\n    CREATE_ALERT: 'CREATE_ALERT',\r\n    DELETE_ALERT: 'DELETE_ALERT',\r\n    RESET_CHECKLIST_VIEWER: 'RESET_CHECKLIST_VIEWER'\r\n  },\r\n  questions: {\r\n    FETCH_QUESTIONS_LIST: 'FETCH_QUESTIONS_LIST',\r\n    FETCH_QUESTION_INFO: 'FETCH_QUESTION_INFO',\r\n    FETCH_QUESTIONS: 'FETCH_QUESTIONS',\r\n    UPDATE_QUESTION: 'UPDATE_QUESTION',\r\n    CREATE_QUESTION: 'CREATE_QUESTION',\r\n    DELETE_QUESTION: 'DELETE_QUESTIONS',\r\n    IMPORT_QUESTION: 'IMPORT_QUESTIONS'\r\n  }\r\n};\r\n","import { User } from '../../types/user/User';\r\nimport { actions } from '../constants';\r\n\r\nconst { userActionTypes } = actions;\r\n\r\nconst createAction = (type: string, payload: any = null) => {\r\n  return {\r\n    type,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const setUserActionConverter = (user: User) => createAction(userActionTypes.SET_USER, user);\r\n","import { Dispatch } from 'redux';\r\nimport { User } from '../../types/user/User';\r\nimport { setUserActionConverter } from './index';\r\n\r\nexport const setUserAction = (user: User) => async (dispatch: Dispatch) => {\r\n  const userData: User = {\r\n    email: user.email,\r\n  };\r\n  dispatch(setUserActionConverter(userData));\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../../../store';\r\nimport firebase from '../../api/firebase/firebase';\r\nimport './Home.sass';\r\nimport { setUserAction } from '../../redux/actions/userActions';\r\nimport { User } from '../../types/user/User';\r\n\r\ninterface Home {\r\n  userData: User,\r\n  setUser: (user: User) => void\r\n}\r\n\r\nexport const Home = (props: Home) => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const bodyWidth = document.getElementsByTagName('body')[0].clientWidth;\r\n  const bodyHeight = document.getElementsByTagName('body')[0].clientHeight;\r\n\r\n  useEffect(() => {\r\n    props.setUser({email: userEmail});\r\n  }, [props, userEmail]);\r\n\r\n  firebase.auth().onAuthStateChanged(() => {\r\n    setUserEmail(firebase.auth().currentUser?.email || '');\r\n  });\r\n\r\n  return (\r\n    <div className='home'>\r\n      <h1>Current user - [{ userEmail }]</h1>\r\n      <button onClick={() => alert(props.userData.email)}>Alert user data email from store</button>\r\n      <button onClick={() => firebase.auth().signOut()}>Sign out</button>\r\n      <button onClick={() => alert(bodyWidth)}>Show client width</button>\r\n      <button onClick={() => alert(bodyHeight)}>Show client height</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect((state: AppState) => ({\r\n  userData: state.userData\r\n}), {\r\n  setUser: setUserAction\r\n})(Home)\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { SignInEmail } from '../../api/firebase/firebase';\r\nimport './SignIn.sass';\r\nimport { setUserAction } from '../../redux/actions/userActions';\r\nimport { User } from '../../types/user/User';\r\n\r\ninterface ISignUp {\r\n  setUser: (user: User) => void;\r\n}\r\n\r\nconst SignIn = (props: ISignUp) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [statusList, setStatus] = useState<string[]>([]);\r\n  const history = useHistory()\r\n\r\n  const onSubmit = () => {\r\n    if (statusList.length === 0) SignInEmail(email, password).then(firebaseResponse => {\r\n      if (firebaseResponse.message) setStatus([firebaseResponse.message]);\r\n      if (firebaseResponse.user) {\r\n        const currentUser: User = { email: firebaseResponse.user.email };\r\n        setStatus(['User successfully signed in']);\r\n        props.setUser(currentUser);\r\n        history.push('/')\r\n      }\r\n    });\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    const email = event.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value;\r\n    setPassword(pass);\r\n  };\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <span>E-mail</span>\r\n      <input value={ email } onChange={ onEmailChange } />\r\n      <span>Password</span>\r\n      <input type='password' value={ password } onChange={ onPasswordChange } />\r\n      { statusList.map(error => <span>{ error }</span>) }\r\n      <button onClick={ onSubmit }>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n  setUser: setUserAction\r\n})(SignIn);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { SignUpEmail } from '../../api/firebase/firebase';\r\nimport { setUserAction } from '../../redux/actions/userActions';\r\nimport { User } from '../../types/user/User';\r\nimport './SignUp.sass';\r\n\r\ninterface ISignUp {\r\n  setUser: (user: User) => void;\r\n}\r\n\r\nconst SignUp = (props: ISignUp) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [statusList, setStatus] = useState<string[]>([]);\r\n  const history = useHistory();\r\n\r\n  const validation = () => {\r\n    // const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    const validationErrors: string[] = [];\r\n\r\n    if (!re.test(String(email).toLowerCase())) validationErrors.push('The email address is badly formatted.');\r\n    if (password.length < 6) validationErrors.push('Password should be at least 6 characters.');\r\n    setStatus(validationErrors);\r\n    console.log('[validationErrors]:', validationErrors);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (statusList.length === 0) SignUpEmail(email, password).then((firebaseResponse) => {\r\n      if (firebaseResponse.message) setStatus([firebaseResponse.message]);\r\n      if (firebaseResponse.user) {\r\n        const currentUser: User = { email: firebaseResponse.user.email };\r\n        setStatus(['User successfully created and signed in']);\r\n        props.setUser(currentUser);\r\n        history.push('/')\r\n      }\r\n    });\r\n  };\r\n\r\n  const onEmailChange = (event: any) => {\r\n    const email = event.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onPasswordChange = (event: any) => {\r\n    const pass = event.target.value;\r\n    setPassword(pass);\r\n  };\r\n\r\n  useEffect(() => {\r\n    validation();\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <span>E-mail</span>\r\n      <input value={ email } onChange={ onEmailChange } />\r\n      <span>Password</span>\r\n      <input type='password' value={ password } onChange={ onPasswordChange } />\r\n      { statusList.map(error => <span>{ error }</span>) }\r\n      <button onClick={ onSubmit }>Sign Up</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n  setUser: setUserAction\r\n})(SignUp);\r\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport './GameMenu.sass'\r\nimport { ClientWindowResolution } from '../../App';\r\n\r\ninterface gameMenuProps {\r\n    clientWindowResolution: ClientWindowResolution\r\n    onMenuButtonClick: () => void\r\n}\r\n\r\nconst GameMenu = (props: gameMenuProps) => {\r\n    return (\r\n        <div className={'game-menu'} style={{height: 30}}>\r\n            <button className={'game-menu__button'} onClick={() => {}}>1</button>\r\n            <button className={'game-menu__button'} onClick={() => {}}>2</button>\r\n            <button className={'game-menu__button'} onClick={props.onMenuButtonClick}>Menu</button>\r\n            <button className={'game-menu__button'} onClick={() => {}}>3</button>\r\n            <button className={'game-menu__button'} onClick={() => {}}>4</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, null)(GameMenu);","import 'antd/dist/antd.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './App.sass';\r\n// import { Header } from './components/Header/Header';\r\nimport { SideMenu } from './components/SideMenu/SideMenu';\r\nimport * as ROUTES from './constants/routes';\r\nimport AdventureCreate from './pages/adventureCreate/AdventureCreate';\r\nimport AdventureList from './pages/adventureList/AdventureList';\r\nimport AdventureView from './pages/adventureView/AdventureView';\r\nimport CharacterCreate from './pages/characterCreate/CharacterCreate';\r\nimport CharacterView from './pages/characterView/CharacterView';\r\nimport Home from './pages/home/Home';\r\nimport SignIn from './pages/signIn/SignIn';\r\nimport SignUp from './pages/signUp/SignUp';\r\nimport GameMenu from './components/GameMenu/GameMenu';\r\n\r\nexport interface ClientWindowResolution {\r\n    width: number\r\n    height: number\r\n}\r\n\r\ninterface AppState {\r\n    menu: {\r\n        isMobileMenu: boolean;\r\n        isMenuCollapsed: boolean;\r\n        isMenuOpened: boolean;\r\n    },\r\n    clientWindowResolution: ClientWindowResolution\r\n}\r\n\r\nexport const App: React.FC = () => {\r\n    const [state, setState] = useState<AppState>({\r\n        menu: {\r\n            isMobileMenu: true,\r\n            isMenuCollapsed: false,\r\n            isMenuOpened: false\r\n        },\r\n        clientWindowResolution: {\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    });\r\n\r\n    const onWindowResize = () => {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setState({\r\n            clientWindowResolution: {\r\n                width: body.clientWidth,\r\n                height: body.clientHeight\r\n            },\r\n            menu: {\r\n                isMenuOpened: !(body.clientWidth < 1024),\r\n                isMenuCollapsed: false,\r\n                isMobileMenu: body.clientWidth < 1024\r\n            }\r\n        });\r\n    };\r\n\r\n    const onMobileMenuButtonClick = () => {\r\n        setState({ ...state, menu: { ...state.menu, isMenuOpened: !state.menu.isMenuOpened } });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.onresize = onWindowResize;\r\n        onWindowResize();\r\n\r\n        return () => {\r\n            window.onresize = null;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className='app'\r\n            style={{\r\n                width: state.clientWindowResolution.width,\r\n                height: state.clientWindowResolution.height\r\n            }}>\r\n            {/* {state.menu.isMobileMenu ? <Header onMenuButtonClick={onMobileMenuButtonClick} /> : null} */}\r\n            <SideMenu\r\n                isMobileMenuView={state.menu.isMobileMenu}\r\n                isMenuCollapsed={state.menu.isMenuCollapsed}\r\n                isMenuOpened={state.menu.isMenuOpened}\r\n                onClose={() => setState({ ...state, menu: { ...state.menu, isMenuOpened: false } })} />\r\n            <div\r\n                style={{\r\n                    width: state.clientWindowResolution.width,\r\n                    height: state.clientWindowResolution.height - 30\r\n                }}\r\n                className='app__content'>\r\n                <Route exact path={ROUTES.HOME} component={Home} />\r\n                <Route path={ROUTES.SIGN_IN} component={SignIn} />\r\n                <Route path={ROUTES.SIGN_UP} component={SignUp} />\r\n                <Route path={ROUTES.ADVENTURE_CREATE} component={AdventureCreate} />\r\n                <Route path={ROUTES.ADVENTURE_LIST} component={AdventureList} />\r\n                <Route exact path={ROUTES.ADVENTURE_VIEW} component={AdventureView} />\r\n                <Route path={ROUTES.CHARACTER_CREATE} component={CharacterCreate} />\r\n                <Route path={ROUTES.CHARACTER_VIEW} component={CharacterView} />\r\n            </div>\r\n            {state.menu.isMobileMenu ? <GameMenu onMenuButtonClick={onMobileMenuButtonClick} clientWindowResolution={state.clientWindowResolution} /> : null}\r\n        </div>\r\n    );\r\n};\r\n","import { ActionReducer } from '../../types/General';\r\nimport { User } from '../../types/user/User';\r\nimport { actions } from '../constants';\r\n\r\nconst initialState: User = {\r\n  email: ''\r\n};\r\n\r\nexport const userDataReducer = (state: User = initialState, action: ActionReducer<User>) => {\r\n  const { SET_USER } = actions.userActionTypes;\r\n\r\n  if (action.type === SET_USER ) {\r\n    return { ...action.payload };\r\n  } else return state;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { userDataReducer } from './userDataReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  userData: userDataReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './app/redux/reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst env = process.env.REACT_APP_NODE_ENV;\r\n\r\nif (env && env === 'development') {\r\n  // @ts-ignore\r\n  middleware.push(logger);\r\n}\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { App } from './app/App';\r\nimport './index.sass';\r\nimport { store } from './store';\r\n\r\nconst RoutedApp = () => (\r\n  <Provider store={ store }>\r\n    <Router basename='/dmt2'>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<RoutedApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}