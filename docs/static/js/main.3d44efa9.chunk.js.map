{"version":3,"sources":["img/dndLogo.png","img/default-user-icon-4.jpg","app/api/firebase/firebase.ts","app/components/SideMenu/SideMenu.tsx","app/pages/homePage/HomePage.tsx","app/App.tsx","app/constants/routes.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Sider","Layout","SubMenu","Menu","HomePage","App","useState","isMenuCollapsed","setIsMenuCollapsed","firestore","collection","get","then","characters","allChars","forEach","doc","push","data","docs","map","id","value","console","log","style","display","justifyContent","alignItems","margin","type","shape","icon","size","onClick","to","height","src","logo","alt","avatar","minHeight","document","getElementsByTagName","clientWidth","clientHeight","collapsed","width","theme","defaultSelectedKeys","mode","inlineCollapsed","Item","key","title","SideMenu","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d44efa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dndLogo.af57fcd0.png\";","module.exports = __webpack_public_path__ + \"static/media/default-user-icon-4.0f8e789e.jpg\";","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const getAllChars = () => {\r\n  return firebase.firestore()\r\n  .collection('playerCharacters')\r\n  .get()\r\n  .then((characters) => {\r\n    let allChars = [];\r\n    characters.forEach((doc) => {\r\n      allChars.push(doc.data());\r\n    });\r\n    return characters.docs.map((doc) => {\r\n      return { id: doc.id, ...doc.data() };\r\n    });\r\n  });\r\n};\r\n\r\nexport default firebase;\r\n","import { Icon, Layout, Menu } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport const SideMenu = (isMenuCollapsed: boolean) => {\r\n  console.log('[SideMenu isMenuCollapsed]:', isMenuCollapsed);\r\n  console.log('[BodyW]:', document.getElementsByTagName('body')[0].clientWidth);\r\n  console.log('[BodyH]:', document.getElementsByTagName('body')[0].clientHeight);\r\n  return (\r\n    <Sider collapsed={ !isMenuCollapsed } width={ 240 } theme=\"light\" style={\r\n      isMenuCollapsed ? {} : { display: 'none' }\r\n    }>\r\n      <div style={ { width: 240 } }>\r\n        <Menu\r\n          defaultSelectedKeys={ ['1'] }\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          inlineCollapsed={ isMenuCollapsed }\r\n        >\r\n          <Menu.Item key=\"1\">\r\n            <Icon type=\"pie-chart\" />\r\n            <span><Link to={ ROUTES.SIGN_IN }>Sign in</Link></span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Icon type=\"desktop\" />\r\n            <span>Option 2</span>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Icon type=\"inbox\" />\r\n            <span>Option 3</span>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"mail\" />\r\n                <span>Navigation One</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n            <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu\r\n            key=\"sub2\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"appstore\" />\r\n                <span>Navigation Two</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n            <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n            <SubMenu key=\"sub3\" title=\"Submenu\">\r\n              <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 13</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub4\" title=\"Very long submenu\">\r\n              <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n              <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n            </SubMenu>\r\n          </SubMenu>\r\n        </Menu>\r\n      </div>\r\n    </Sider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <div>Content</div>\r\n  )\r\n}\r\n","import { Button, Layout } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\nimport logo from './../img/dndLogo.png';\r\nimport avatar from './../img/default-user-icon-4.jpg';\r\nimport { getAllChars } from './api/firebase/firebase';\r\nimport './App.scss';\r\nimport { SideMenu } from './components/SideMenu/SideMenu';\r\nimport * as ROUTES from './constants/routes';\r\nimport { HomePage } from './pages/homePage/HomePage';\r\n\r\nconst App: React.FC = () => {\r\n  const [isMenuCollapsed, setIsMenuCollapsed] = useState(true);\r\n\r\n  const onMenuClick = () => {\r\n    console.log(isMenuCollapsed);\r\n    setIsMenuCollapsed(!isMenuCollapsed);\r\n  };\r\n\r\n  getAllChars().then(value => console.log('[value]:', value));\r\n  return (\r\n    <Router>\r\n      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n        <Button style={{margin: 5}} type=\"primary\" shape=\"round\" icon=\"menu-fold\" size={'default'} onClick={onMenuClick}/>\r\n        <Link to={'/'}><img style={{height: 50, margin: 5}} src={ logo } alt=\"\" /></Link>\r\n        <img style={{height: 50, margin: 5}} src={ avatar } alt=\"\" />\r\n      </div>\r\n      <Layout style={ { minHeight: '100vh' } }>\r\n\r\n        { SideMenu(isMenuCollapsed) }\r\n        <Layout>\r\n\r\n          <Route exact path={ ROUTES.LANDING } component={ HomePage } />\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n  .register(swUrl)\r\n  .then(registration => {\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n            console.log(\r\n              'New content is available and will be used when all ' +\r\n              'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n            );\r\n\r\n            // Execute callback\r\n            if (config && config.onUpdate) {\r\n              config.onUpdate(registration);\r\n            }\r\n          } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n            console.log('Content is cached for offline use.');\r\n\r\n            // Execute callback\r\n            if (config && config.onSuccess) {\r\n              config.onSuccess(registration);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n  })\r\n  .catch(error => {\r\n    console.error('Error during service worker registration:', error);\r\n  });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n  .then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (\r\n      response.status === 404 ||\r\n      (contentType != null && contentType.indexOf('javascript') === -1)\r\n    ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  })\r\n  .catch(() => {\r\n    console.log(\r\n      'No internet connection found. App is running in offline mode.'\r\n    );\r\n  });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst RoutedApp = () => (\r\n  <App />\r\n);\r\n\r\nReactDOM.render(<RoutedApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}